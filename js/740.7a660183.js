"use strict";(self["webpackChunkyt_stats_quasar"]=self["webpackChunkyt_stats_quasar"]||[]).push([[740],{3308:(e,t,a)=>{a.d(t,{Z:()=>c});a(71),a(7098),a(9377),a(7664);var n=a(6395),s=a(5616),r=a(52),o=a.n(r);class c{constructor(){}static get unngroupedGroupingName(){return"[Ungrouped]"}async _fetchMetadata(){var e=await o().get("./data/metadata.json");return Promise.resolve(e.data)}async _fetchViewsData(e,t,a){const n=s.ZP.extractDate(e,"YYYY/MM/DD"),r=s.ZP.extractDate(t,"YYYY/MM/DD"),c=a["viewDeltaFiles"],i={},l=[],u={inclusiveFrom:!0,inclusiveTo:!0};c.forEach((e=>{const t=s.ZP.extractDate(e["start"],"MMMM_DD_YYYY"),a=s.ZP.extractDate(e["end"],"MMMM_DD_YYYY");t<=r&&n<=a&&l.push(o().get("./data/"+e["fileName"]))}));const h=await Promise.all(l);return h.forEach((e=>{Object.keys(e.data).forEach((t=>{const a=s.ZP.extractDate(t,"MMMM_DD_YYYY");s.ZP.isBetweenDates(a,n,r,u)&&(i[t]=e.data[t])}))})),i}async _fetchSubscriberCounts(e,t,a){const n=s.ZP.extractDate(e,"YYYY/MM/DD"),r=s.ZP.extractDate(t,"YYYY/MM/DD"),c=(await this.getChannels(),a["subscriberCountsFiles"]),i={},l=[],u={inclusiveFrom:!0,inclusiveTo:!0};c.forEach((e=>{const t=s.ZP.extractDate(e["start"],"MMMM_DD_YYYY"),a=s.ZP.extractDate(e["end"],"MMMM_DD_YYYY");t<=r&&n<=a&&l.push(o().get("./data/"+e["fileName"]))}));const h=await Promise.all(l);return h.forEach((e=>{Object.keys(e.data).forEach((t=>{const a=s.ZP.extractDate(t,"MMMM_DD_YYYY");s.ZP.isBetweenDates(a,n,r,u)&&(i[t]=e.data[t])}))})),i}async fetchChannelData(e,t,a){const n=await this._fetchMetadata(),r=n["channels"][a],o=await this._fetchViewsData(e,t,n),c=await this._fetchSubscriberCounts(e,t,n),i=Object.keys(o),l=[],u=[],h=[],d=[0,0,0,0,0,0,0];i.forEach((e=>{const t=o[e],n=c[e],r=s.ZP.extractDate(e,"MMMM_DD_YYYY").getTime(),i=s.ZP.extractDate(e,"MMMM_DD_YYYY").getDay(),p=Object.values(t).reduce(((e,t)=>t+e),0);if(t.hasOwnProperty(a)){l.push([r,t[a]]),d[i]+=t[a];const e=(100*t[a]/p).toFixed(1);h.push([r,e])}else l.push([r,0]),h.push([r,0]);n.hasOwnProperty(a)?u.push([r,n[a]]):u.push([r,0])}));const p={viewsByDay:{name:"",data:l},subscribersByDay:{name:"",data:u},viewsByDayOfWeek:{name:"",data:d},shareByDay:{name:"",data:h},channelData:r};return Promise.resolve(p)}async fetchData(e,t){const a=await this._fetchMetadata(),n=await this._fetchViewsData(e,t,a),s=await this._fetchSubscriberCounts(e,t,a),r=await this.getChannels(),o=await this._calculateTotalViewsAndSubscribersByChannel(n,s,r),c=await this.getChannelGroupings(),i=this._getChannelIdToGroupingMap(c),l=this._calculateViewsByGrouping(n,c,i),u=this._calculateViewsByDayAndGrouping(n,c,i),h=this._calculateViewsByDayOfWeekAndGrouping(n,c,i),d=this._calculateViewsByChannelAndCollectByGrouping(n,c,l),p=this._calculateViewsByDayAndChannel(n,c),g={viewsByGrouping:l,viewsByDayAndGrouping:u,viewsByDayOfWeekAndGrouping:h,viewsByChannelCollectedByGrouping:d,viewsByDayAndChannel:p,subscriberCounts:s,viewsAndSubscribersTotals:o};return Promise.resolve(g)}_calculateViewsByDayAndGrouping(e,t,a){const n=Object.keys(e),r=[];return Object.keys(t).forEach((t=>{const o=[];n.forEach((n=>{const r=e[n],c=s.ZP.extractDate(n,"MMMM_DD_YYYY").getTime();var i=0;for(const[e,s]of Object.entries(r))a[e]===t&&(i+=s);o.push([c,i])})),r.push({name:t,data:o})})),r}_calculateViewsByDayOfWeekAndGrouping(e,t,a){const n=Object.keys(e),r={};return Object.keys(t).forEach((e=>{r[e]={name:e,data:[0,0,0,0,0,0,0]}})),n.forEach((t=>{const n=s.ZP.extractDate(t,"MMMM_DD_YYYY").getDay(),o=e[t];for(const[e,s]of Object.entries(o)){const t=a[e];r[t].data[n]+=s}})),Object.values(r)}_calculateViewsByGrouping(e,t,a){const n={};Object.keys(t).forEach((e=>{n[e]=0}));for(const[s,r]of Object.entries(e))for(const[e,t]of Object.entries(r)){const s=a[e];n[s]+=t}return n}_calculateTotalViewsAndSubscribersByChannel(e,t,a){const n=a.map((e=>e.id)),s=Object.keys(e);var r=0;const o={},c={};n.forEach((e=>{o[e]=[],c[e]=[]}));const i={};a.forEach((e=>{i[e.id]=e})),s.forEach((a=>{Object.entries(e[a]).forEach((e=>{o[e[0]].push(e[1]),r+=e[1]})),Object.entries(t[a]).forEach((e=>{c[e[0]].push(e[1])}))}));const l=[];return Object.keys(o).forEach((e=>{const t=o[e],a=c[e],n=t.reduce(((e,t)=>e+t),0),s=a.reduce(((e,t)=>e+t),0),u=s/a.length,h={name:i[e]["name"],id:parseInt(e),share:parseFloat((100*n/r).toFixed(1)),subscribers:parseFloat(u.toFixed(0)),views:n,data:[[u,n]]};l.push(h)})),l.sort(((e,t)=>t.data[0][0]<e.data[0][0]?-1:t.data[0][0]>e.data[0][0]?1:0)),l}_calculateViewsByDayAndChannel(e,t){const a=Object.keys(e),n=Object.values(t).flat(),r=[];n.forEach((t=>{const n=[];a.forEach((a=>{const r=e[a],o=s.ZP.extractDate(a,"MMMM_DD_YYYY").getTime();r.hasOwnProperty(t.id)?n.push([o,r[t.id]]):n.push([o,0])}));const o=n.reduce(((e,t)=>t[1]+e),0);r.push({name:t.name,data:n,totalViews:o})}));const o=r.reduce(((e,t)=>t.totalViews+e),0),c=r.map((e=>(e["percentageOfTotalViews"]=e.totalViews/o,e)));return c}_calculateViewsByChannelAndCollectByGrouping(e,t,a){const n={};for(const[r,o]of Object.entries(t))o.forEach((e=>{n[e.id]=0}));for(const[r,o]of Object.entries(e))for(const[e,t]of Object.entries(o))n[e]+=t;const s=[];for(const[r,o]of Object.entries(t)){const e=[];o.forEach((t=>{e.push({x:t.name,y:n[t.id],url:t.url,id:t.id,shareOfGrouping:(100*n[t.id]/a[r]).toFixed(1)})})),s.push({name:r,data:e})}return s}_getChannelIdToGroupingMap(e){const t={};for(const[a,n]of Object.entries(e))n.forEach((e=>{t[e.id]=a}));return t}saveCustomChannelGroupings(e){const t=Object.keys(e);t.forEach((t=>{0==e[t].length&&delete e[t]})),n.Z.set("customChannelGroupings",e)}getCustomChannelGroupings(){return n.Z.getItem("customChannelGroupings")}async getChannels(){const e=await o().get("./data/metadata.json");return Promise.resolve(Object.values(e.data["channels"]))}async getDefaultChannelGroupings(){const e=await o().get("./data/default-channel-groupings.json");return Promise.resolve(e.data)}async getChannelGroupings(){var e=await this.getDefaultChannelGroupings(),t=this.getCustomChannelGroupings();if(null===t)return Promise.resolve(e);const a=Object.values(t).flat().map((e=>e.id)),n=Object.values(e).flat().map((e=>e.id));if(a.length==n.length)return Promise.resolve(t);const s=n.filter((e=>!a.includes(e))),r=c.unngroupedGroupingName;t.hasOwnProperty(r)||(t[r]=[]);const o=Object.values(e).flat(),i=o.filter((e=>s.includes(e.id)));t[r]=t[r].concat(i);const l=Object.keys(t);return l.forEach((e=>{0==t[e].length&&delete t[e]})),this.saveCustomChannelGroupings(t),Promise.resolve(t)}}},6740:(e,t,a)=>{a.r(t),a.d(t,{default:()=>k});var n=a(3673),s=a(2323);const r=(0,n.HX)("data-v-d023ed74");(0,n.dD)("data-v-d023ed74");const o={class:"row q-ml-sm"},c={class:"list-group-item"},i={class:"row q-ml-sm q-mt-md"},l={class:"col-xs-12 col-sm-12 col-md-12"},u={class:"row items-center justify-center full-height full-width text-center"},h={class:"row q-ml-sm q-mt-xl q-mb-xl"},d={class:"col-xs-6 col-sm-6 col-md-6"},p={class:"row items-center justify-center full-height full-width text-center"},g={class:"col-xs-6 col-sm-6 col-md-6"},m={class:"row items-center justify-center full-height full-width text-center"};(0,n.Cn)();const f=r(((e,t,a,f,y,w)=>{const D=(0,n.up)("ChannelGroupingName"),v=(0,n.up)("draggable"),C=(0,n.up)("q-btn");return(0,n.wg)(),(0,n.j4)(n.HY,null,[(0,n.Wm)("div",o,[((0,n.wg)(!0),(0,n.j4)(n.HY,null,(0,n.Ko)(f.lists,((e,t)=>((0,n.wg)(),(0,n.j4)("div",{key:t,class:"col-xs-12 col-sm-12 col-md-4"},[(0,n.Wm)(D,{"channel-grouping-name":t,onChannelGroupingNameChanged:f.handleChannelGroupingNameChange},null,8,["channel-grouping-name","onChannelGroupingNameChanged"]),(0,n.Wm)(v,{tag:"ul",class:"list-group",list:e,group:"ppl","item-key":"name"},{item:r((({element:e,index:t})=>[(0,n.Wm)("li",c,(0,s.zw)(e.name)+" "+(0,s.zw)(t),1)])),_:2},1032,["list"])])))),128))]),(0,n.Wm)("div",i,[(0,n.Wm)("div",l,[(0,n.Wm)("div",u,[(0,n.Wm)(C,{round:"",color:"primary",icon:"add",onClick:f.addChannelGroup},null,8,["onClick"])])])]),(0,n.Wm)("div",h,[(0,n.Wm)("div",d,[(0,n.Wm)("div",p,[(0,n.Wm)(C,{color:"secondary",icon:"undo",label:"Reset",onClick:f.resetChannelGroupings},null,8,["onClick"])])]),(0,n.Wm)("div",g,[(0,n.Wm)("div",m,[(0,n.Wm)(C,{color:"primary",icon:"done",label:"Done",onClick:f.saveChannelGroupings},null,8,["onClick"])])])])],64)}));var y=a(1959),w=a(9582),D=a(8603),v=a(470),C=a.n(v),b=(a(71),a(8880));function Y(e,t,a,r,o,c){return(0,n.wg)(),(0,n.j4)("h5",{contenteditable:"",onBlur:t[1]||(t[1]=(...e)=>r.onEditGroupingName&&r.onEditGroupingName(...e)),onKeydown:t[2]||(t[2]=(0,b.D2)(((...e)=>r.onEditGroupingName&&r.onEditGroupingName(...e)),["enter"]))},(0,s.zw)(r.currentChannelGroupingName),33)}const M={props:{channelGroupingName:{required:!0,type:String}},emits:["channelGroupingNameChanged"],setup(e,{emit:t}){var a=(0,y.SU)(e.channelGroupingName);const n=function(e){e.preventDefault(),e.target.blur(),t("channelGroupingNameChanged",{previousName:a,newName:e.target.innerHTML}),a=e.target.innerHTML};return{onEditGroupingName:n,currentChannelGroupingName:a}}};M.render=Y;const G=M;var _=a(3308);const O={display:"Two Lists",order:1,components:{draggable:C(),ChannelGroupingName:G},setup(e,{emit:t}){const a=(0,w.tv)(),n=new _.Z,s=(0,y.iH)([]);n.getChannelGroupings().then((e=>{s.value=e})).catch((e=>console.log("blah blah")));const r=function(e){e.preventDefault();var t=1,a="New Grouping "+String(t);while(1){if(!s.value.hasOwnProperty(a))break;t++,a="New Grouping "+String(t)}s.value[a]=[]},o=function(e){e.preventDefault();JSON.stringify(s.value);n.saveCustomChannelGroupings(s.value),a.push("/")},c=function(e){e.preventDefault(),n.getDefaultChannelGroupings().then((e=>{s.value=e})).then(n.saveCustomChannelGroupings(s.value)).catch((e=>{throw"Error resetting channel groupings."}))},i=function(e){var t=e.newName;if(t!==e.previousName){while(s.value.hasOwnProperty(t)||t===_.Z.unngroupedGroupingName)t+="_";s.value=(0,D.mapKeys)(s.value,(function(a,n){return n===e.previousName?t:n}))}};return{lists:s,addChannelGroup:r,handleChannelGroupingNameChange:i,resetChannelGroupings:c,saveChannelGroupings:o}}};var j=a(4607),P=a(7518),E=a.n(P);O.render=f,O.__scopeId="data-v-d023ed74";const k=O;E()(O,"components",{QBtn:j.Z})}}]);