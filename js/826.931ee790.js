"use strict";(self["webpackChunkyt_stats_quasar"]=self["webpackChunkyt_stats_quasar"]||[]).push([[826],{3308:(e,t,n)=>{n.d(t,{Z:()=>s});n(71),n(9377),n(7664);var a=n(6395),r=n(2661);class s{constructor(){}static get unngroupedGroupingName(){return"[Ungrouped]"}async __makeFakeData(e,t){const n=r.ZP.extractDate(e,"YYYY/MM/DD"),a=r.ZP.extractDate(t,"YYYY/MM/DD"),s={};var o=n;const l={inclusiveFrom:!0,inclusiveTo:!0},c=await this.getChannels();while(r.ZP.isBetweenDates(o,n,a,l)){const e=r.ZP.formatDate(o,"MMM D, YYYY");s[e]={},c.forEach((t=>{s[e][t.id]=Math.round(5e3*Math.random())})),o=r.ZP.addToDate(o,{days:1})}return Promise.resolve(s)}async fetchData(e,t){const n=await this.__makeFakeData(e,t),a=await this.getChannelGroupings(),r=this._getChannelIdToGroupingMap(a),s=this._calculateViewsByGrouping(n,a,r),o=this._calculateViewsByDayAndGrouping(n,a,r),l=this._calculateViewsByDayOfWeekAndGrouping(n,a,r),c=this._calculateViewsByChannelAndCollectByGrouping(n,a,s),i=this._calculateViewsByDayAndChannel(n,a),u={viewsByGrouping:s,viewsByDayAndGrouping:o,viewsByDayOfWeekAndGrouping:l,viewsByChannelCollectedByGrouping:c,viewsByDayAndChannel:i};return Promise.resolve(u)}_calculateViewsByDayAndGrouping(e,t,n){const a=Object.keys(e),s=[];return Object.keys(t).forEach((t=>{const o=[];a.forEach((a=>{const s=e[a];var l=0;for(const[e,r]of Object.entries(s))n[e]===t&&(l+=r);o.push([r.ZP.extractDate(a,"MMM D, YYYY").getTime(),l])})),s.push({name:t,data:o})})),s}_calculateViewsByDayOfWeekAndGrouping(e,t,n){const a=Object.keys(e),s={};return Object.keys(t).forEach((e=>{s[e]={name:e,data:[0,0,0,0,0,0,0]}})),a.forEach((t=>{const a=r.ZP.extractDate(t,"MMM D, YYYY").getDay(),o=e[t];for(const[e,r]of Object.entries(o)){const t=n[e];s[t].data[a]+=r}})),Object.values(s)}_calculateViewsByGrouping(e,t,n){const a={};Object.keys(t).forEach((e=>{a[e]=0}));for(const[r,s]of Object.entries(e))for(const[e,t]of Object.entries(s)){const r=n[e];a[r]+=t}return a}_calculateViewsByDayAndChannel(e,t){const n=Object.keys(e),a=Object.values(t).flat(),s=[];return a.forEach((t=>{const a=[];n.forEach((n=>{const s=e[n],o=r.ZP.extractDate(n,"MMM D, YYYY").getTime();s.hasOwnProperty(t.id)?a.push([o,s[t.id]]):a.push([o,0])})),s.push({name:t.name,data:a})})),s}_calculateViewsByChannelAndCollectByGrouping(e,t,n){const a={};for(const[s,o]of Object.entries(t))o.forEach((e=>{a[e.id]=0}));for(const[s,o]of Object.entries(e))for(const[e,t]of Object.entries(o))a[e]+=t;const r=[];for(const[s,o]of Object.entries(t)){const e=[];o.forEach((t=>{e.push({x:t.name,y:a[t.id],url:t.url,shareOfGrouping:(100*a[t.id]/n[s]).toFixed(1)})})),r.push({name:s,data:e})}return r}_getChannelIdToGroupingMap(e){const t={};for(const[n,a]of Object.entries(e))a.forEach((e=>{t[e.id]=n}));return t}saveCustomChannelGroupings(e){const t=Object.keys(e);t.forEach((t=>{0==e[t].length&&delete e[t]})),a.Z.set("customChannelGroupings",e)}getCustomChannelGroupings(){return a.Z.getItem("customChannelGroupings")}async getChannels(){const e=await this.getDefaultChannelGroupings(),t=Object.values(e).flat();return Promise.resolve(Object.values(t).flat())}getDefaultChannelGroupings(){const e={"ghkg hkhkhkhl":[{name:"channel a",id:1,url:"http://example.org/a"},{name:"channel b",id:2,url:"http://example.org/b"},{name:"channel c",id:3,url:"http://example.org/c"},{name:"channel d",id:4,url:"http://example.org/d"}],asdfdafsdfadfadfdfs:[{name:"channel e",id:5,url:"http://example.org/e"},{name:"channel f",id:6,url:"http://example.org/f"},{name:"channel g",id:7,url:"http://example.org/g"}],qqqqqq:[{name:"channel h",id:8,url:"http://example.org/h"},{name:"channel i",id:9,url:"http://example.org/i"},{name:"channel j",id:10,url:"http://example.org/j"}],rrasdfasdadfdsfdasfadsdfdf:[{name:"channel k",id:11,url:"http://example.org/k"},{name:"channel l",id:12,url:"http://example.org/l"},{name:"channel m",id:13,url:"http://example.org/m"},{name:"channel n",id:14,url:"http://example.org/n"},{name:"channel o",id:15,url:"http://example.org/o"},{name:"channel p",id:16,url:"http://example.org/p"}]};return Promise.resolve(e)}async getChannelGroupings(){var e=await this.getDefaultChannelGroupings(),t=this.getCustomChannelGroupings();if(null===t)return Promise.resolve(e);const n=Object.values(t).flat().map((e=>e.id)),a=Object.values(e).flat().map((e=>e.id));if(n.length==a.length)return Promise.resolve(t);const r=a.filter((e=>!n.includes(e))),o=s.unngroupedGroupingName;t.hasOwnProperty(o)||(t[o]=[]);const l=Object.values(e).flat(),c=l.filter((e=>r.includes(e.id)));t[o]=t[o].concat(c);const i=Object.keys(t);return i.forEach((e=>{0==t[e].length&&delete t[e]})),this.saveCustomChannelGroupings(t),Promise.resolve(t)}}},826:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var a=n(2323);function r(e,t,n,r,s,o){return" default content "+(0,a.zw)(r.lists)}var s=n(1959),o=n(3308);const l={setup(e,{emit:t}){const n=new o.Z,a=(0,s.iH)([]);return n.getChannelGroupings().then((e=>{a.value=e})).catch((e=>console.log(e))),{lists:a}}};l.render=r;const c=l}}]);