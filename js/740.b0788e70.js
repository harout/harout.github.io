"use strict";(self["webpackChunkyt_stats_quasar"]=self["webpackChunkyt_stats_quasar"]||[]).push([[740],{3308:(e,n,t)=>{t.d(n,{Z:()=>i});t(71),t(9377),t(7664);var a=t(6395),s=t(2661),o=t(52),r=t.n(o);class i{constructor(){}static get unngroupedGroupingName(){return"[Ungrouped]"}async _fetchViewsData(e,n){const t=s.ZP.extractDate(e,"YYYY/MM/DD"),a=s.ZP.addToDate(t,{days:-1}),o=s.ZP.extractDate(n,"YYYY/MM/DD"),i=await this.getChannels(),l=await r().get("./data/views.json"),c=l.data;var u=a;const h={inclusiveFrom:!0,inclusiveTo:!0},g={},d={};while(s.ZP.isBetweenDates(u,a,o,h)){const e=s.ZP.formatDate(u,"MMMM_DD_YYYY");u=s.ZP.addToDate(u,{days:1}),d[e]={},c.hasOwnProperty(e)&&i.forEach((n=>{const t=n.id;if(!c[e].hasOwnProperty(t))return;const a=c[e][t];if(g.hasOwnProperty(t)){const n=Math.max(0,a-g[t]);d[e][t]=n}g[t]=a}))}const p=s.ZP.formatDate(a,"MMMM_DD_YYYY");return delete d[p],d}async fetchData(e,n){const t=await this._fetchViewsData(e,n),a=await this.getChannelGroupings(),s=this._getChannelIdToGroupingMap(a),o=this._calculateViewsByGrouping(t,a,s),r=this._calculateViewsByDayAndGrouping(t,a,s),i=this._calculateViewsByDayOfWeekAndGrouping(t,a,s),l=this._calculateViewsByChannelAndCollectByGrouping(t,a,o),c=this._calculateViewsByDayAndChannel(t,a),u={viewsByGrouping:o,viewsByDayAndGrouping:r,viewsByDayOfWeekAndGrouping:i,viewsByChannelCollectedByGrouping:l,viewsByDayAndChannel:c};return Promise.resolve(u)}_calculateViewsByDayAndGrouping(e,n,t){const a=Object.keys(e),o=[];return Object.keys(n).forEach((n=>{const r=[];a.forEach((a=>{const o=e[a],i=s.ZP.extractDate(a,"MMMM_D_YYYY").getTime();var l=0;for(const[e,s]of Object.entries(o))t[e]===n&&(l+=s);r.push([i,l])})),o.push({name:n,data:r})})),o}_calculateViewsByDayOfWeekAndGrouping(e,n,t){const a=Object.keys(e),o={};return Object.keys(n).forEach((e=>{o[e]={name:e,data:[0,0,0,0,0,0,0]}})),a.forEach((n=>{const a=s.ZP.extractDate(n,"MMMM_D_YYYY").getDay(),r=e[n];for(const[e,s]of Object.entries(r)){const n=t[e];o[n].data[a]+=s}})),Object.values(o)}_calculateViewsByGrouping(e,n,t){const a={};Object.keys(n).forEach((e=>{a[e]=0}));for(const[s,o]of Object.entries(e))for(const[e,n]of Object.entries(o)){const s=t[e];a[s]+=n}return a}_calculateViewsByDayAndChannel(e,n){const t=Object.keys(e),a=Object.values(n).flat(),o=[];a.forEach((n=>{const a=[];t.forEach((t=>{const o=e[t],r=s.ZP.extractDate(t,"MMMM_D_YYYY").getTime();o.hasOwnProperty(n.id)?a.push([r,o[n.id]]):a.push([r,0])}));const r=a.reduce(((e,n)=>n[1]+e),0);o.push({name:n.name,data:a,totalViews:r})}));const r=o.reduce(((e,n)=>n.totalViews+e),0),i=o.map((e=>(e["percentageOfTotlaViews"]=e.totalViews/r,e)));return i}_calculateViewsByChannelAndCollectByGrouping(e,n,t){const a={};for(const[o,r]of Object.entries(n))r.forEach((e=>{a[e.id]=0}));for(const[o,r]of Object.entries(e))for(const[e,n]of Object.entries(r))a[e]+=n;const s=[];for(const[o,r]of Object.entries(n)){const e=[];r.forEach((n=>{e.push({x:n.name,y:a[n.id],url:n.url,id:n.id,shareOfGrouping:(100*a[n.id]/t[o]).toFixed(1)})})),s.push({name:o,data:e})}return s}_getChannelIdToGroupingMap(e){const n={};for(const[t,a]of Object.entries(e))a.forEach((e=>{n[e.id]=t}));return n}saveCustomChannelGroupings(e){const n=Object.keys(e);n.forEach((n=>{0==e[n].length&&delete e[n]})),a.Z.set("customChannelGroupings",e)}getCustomChannelGroupings(){return a.Z.getItem("customChannelGroupings")}async getChannels(){const e=await this.getDefaultChannelGroupings(),n=Object.values(e).flat();return Promise.resolve(Object.values(n).flat())}async getDefaultChannelGroupings(){const e=await r().get("./data/default-channel-groupings.json");return Promise.resolve(e.data)}async getChannelGroupings(){var e=await this.getDefaultChannelGroupings(),n=this.getCustomChannelGroupings();if(null===n)return Promise.resolve(e);const t=Object.values(n).flat().map((e=>e.id)),a=Object.values(e).flat().map((e=>e.id));if(t.length==a.length)return Promise.resolve(n);const s=a.filter((e=>!t.includes(e))),o=i.unngroupedGroupingName;n.hasOwnProperty(o)||(n[o]=[]);const r=Object.values(e).flat(),l=r.filter((e=>s.includes(e.id)));n[o]=n[o].concat(l);const c=Object.keys(n);return c.forEach((e=>{0==n[e].length&&delete n[e]})),this.saveCustomChannelGroupings(n),Promise.resolve(n)}}},6740:(e,n,t)=>{t.r(n),t.d(n,{default:()=>P});var a=t(3673),s=t(2323);const o=(0,a.HX)("data-v-d023ed74");(0,a.dD)("data-v-d023ed74");const r={class:"row q-ml-sm"},i={class:"list-group-item"},l={class:"row q-ml-sm q-mt-md"},c={class:"col-xs-12 col-sm-12 col-md-12"},u={class:"row items-center justify-center full-height full-width text-center"},h={class:"row q-ml-sm q-mt-xl q-mb-xl"},g={class:"col-xs-6 col-sm-6 col-md-6"},d={class:"row items-center justify-center full-height full-width text-center"},p={class:"col-xs-6 col-sm-6 col-md-6"},m={class:"row items-center justify-center full-height full-width text-center"};(0,a.Cn)();const f=o(((e,n,t,f,v,w)=>{const y=(0,a.up)("ChannelGroupingName"),C=(0,a.up)("draggable"),G=(0,a.up)("q-btn");return(0,a.wg)(),(0,a.j4)(a.HY,null,[(0,a.Wm)("div",r,[((0,a.wg)(!0),(0,a.j4)(a.HY,null,(0,a.Ko)(f.lists,((e,n)=>((0,a.wg)(),(0,a.j4)("div",{key:n,class:"col-xs-12 col-sm-12 col-md-4"},[(0,a.Wm)(y,{"channel-grouping-name":n,onChannelGroupingNameChanged:f.handleChannelGroupingNameChange},null,8,["channel-grouping-name","onChannelGroupingNameChanged"]),(0,a.Wm)(C,{tag:"ul",class:"list-group",list:e,group:"ppl","item-key":"name"},{item:o((({element:e,index:n})=>[(0,a.Wm)("li",i,(0,s.zw)(e.name)+" "+(0,s.zw)(n),1)])),_:2},1032,["list"])])))),128))]),(0,a.Wm)("div",l,[(0,a.Wm)("div",c,[(0,a.Wm)("div",u,[(0,a.Wm)(G,{round:"",color:"primary",icon:"add",onClick:f.addChannelGroup},null,8,["onClick"])])])]),(0,a.Wm)("div",h,[(0,a.Wm)("div",g,[(0,a.Wm)("div",d,[(0,a.Wm)(G,{color:"secondary",icon:"undo",label:"Reset",onClick:f.resetChannelGroupings},null,8,["onClick"])])]),(0,a.Wm)("div",p,[(0,a.Wm)("div",m,[(0,a.Wm)(G,{color:"primary",icon:"done",label:"Done",onClick:f.saveChannelGroupings},null,8,["onClick"])])])])],64)}));var v=t(1959),w=t(9582),y=t(8603),C=t(470),G=t.n(C),D=(t(71),t(8880));function b(e,n,t,o,r,i){return(0,a.wg)(),(0,a.j4)("h5",{contenteditable:"",onBlur:n[1]||(n[1]=(...e)=>o.onEditGroupingName&&o.onEditGroupingName(...e)),onKeydown:n[2]||(n[2]=(0,D.D2)(((...e)=>o.onEditGroupingName&&o.onEditGroupingName(...e)),["enter"]))},(0,s.zw)(o.currentChannelGroupingName),33)}const O={props:{channelGroupingName:{required:!0,type:String}},emits:["channelGroupingNameChanged"],setup(e,{emit:n}){var t=(0,v.SU)(e.channelGroupingName);const a=function(e){e.preventDefault(),e.target.blur(),n("channelGroupingNameChanged",{previousName:t,newName:e.target.innerHTML}),t=e.target.innerHTML};return{onEditGroupingName:a,currentChannelGroupingName:t}}};O.render=b;const j=O;var _=t(3308);const Y={display:"Two Lists",order:1,components:{draggable:G(),ChannelGroupingName:j},setup(e,{emit:n}){const t=(0,w.tv)(),a=new _.Z,s=(0,v.iH)([]);a.getChannelGroupings().then((e=>{s.value=e})).catch((e=>console.log("blah blah")));const o=function(e){e.preventDefault();var n=1,t="New Grouping "+String(n);while(1){if(!s.value.hasOwnProperty(t))break;n++,t="New Grouping "+String(n)}s.value[t]=[]},r=function(e){e.preventDefault();JSON.stringify(s.value);a.saveCustomChannelGroupings(s.value),t.push("/")},i=function(e){e.preventDefault(),a.getDefaultChannelGroupings().then((e=>{s.value=e})).then(a.saveCustomChannelGroupings(s.value)).catch((e=>{throw"Error resetting channel groupings."}))},l=function(e){var n=e.newName;if(n!==e.previousName){while(s.value.hasOwnProperty(n)||n===_.Z.unngroupedGroupingName)n+="_";s.value=(0,y.mapKeys)(s.value,(function(t,a){return a===e.previousName?n:a}))}};return{lists:s,addChannelGroup:o,handleChannelGroupingNameChange:l,resetChannelGroupings:i,saveChannelGroupings:r}}};var M=t(6281),N=t(7518),k=t.n(N);Y.render=f,Y.__scopeId="data-v-d023ed74";const P=Y;k()(Y,"components",{QBtn:M.Z})}}]);